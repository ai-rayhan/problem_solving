import 'dart:io';

class InfixToPrefixConverter {
  static bool isOperator(String char) {
    return ['+', '-', '*', '/'].contains(char);
  }

  static int getPrecedence(String operator) {
    if (operator == '+' || operator == '-') {
      return 1;
    } else if (operator == '*' || operator == '/') {
      return 2;
    }
    return 0;
  }

  static String infixToPrefix(String infixExpression) {
    List<String> stack = [];
    List<String> prefixExpression = [];

    for (int i = infixExpression.length - 1; i >= 0; i--) {
      String char = infixExpression[i];

      if (char == ')') {
        stack.add(char);
      } else if (char == '(') {
        while (stack.isNotEmpty && stack.last != ')') {
          prefixExpression.add(stack.removeLast());
        }
        stack.removeLast(); // Remove ')' from the stack
      } else if (isOperator(char)) {
        while (stack.isNotEmpty && getPrecedence(stack.last) > getPrecedence(char)) {
          prefixExpression.add(stack.removeLast());
        }
        stack.add(char);
      } else if (RegExp(r'\d').hasMatch(char)) {
        prefixExpression.add(char);
      }
    }

    while (stack.isNotEmpty) {
      prefixExpression.add(stack.removeLast());
    }

    return prefixExpression.reversed.join();
  }
}

void main() {
  String infixExpression = stdin.readLineSync() ?? "";
  String prefixExpression = InfixToPrefixConverter.infixToPrefix(infixExpression);
  print(prefixExpression);
}
